---------------------------- DRAWN2CODE GENERATED CODE -------------------------
-- This code is automatically generated by Drawn2Code Designer (version 1.573). 
-- As you make changes to your design, the code here will update automatically! 
--> * Edits you make in THIS CODE WINDOW ARE NOT SYNCED to your D2C design * <--
-- Notes:
-- Set the project folder with the "folder" button in the generated code window.
-- Save this code to a "main.lua" file (in the project folder) using the "save"
--   button in the generated code window.
-- Simple "config.lua" & "build.settings" files are created if not present.
-- Design File: "/Users/gmarcemont/Documents/hackathon/public_safety_app.d2c"
--------------------------------------------------------------------------------


-- load sound effect: 636654__eponn__ui-app (1).wav
-- https://docs.coronalabs.com/api/library/audio/loadSound.html
--(see pages 85-86, 105-106, 296 of CPMAD textbook for usage)
Obj389 = audio.loadSound("636654__eponn__ui-app (1).wav")

-- play audio on channel 1-32 (select channel 0 for the default):
-- https://docs.coronalabs.com/api/library/audio/play.html
--(see pages 85-86, 105-107, 192, 296 of CPMAD textbook for usage)
Obj390 = audio.play( Obj389 )
local widget = require "widget"

Obj158 = { type = "gradient",
    color1 = {1.0, 0.8, 0.4, 1.0},
    color2 = {1.0, 1.0, 0.2, 1.0},
    direction = "down"
}
Obj158.name = "null"

-- image "map_corrected.jpeg"
Obj1 = display.newImageRect( "map_corrected.jpeg", 320, 486 )
Obj1.x = 160
Obj1.y = 242
Obj1.id = "Obj1"

Obj157 = display.newRect(157, 37, 326, 77)
Obj157:setFillColor(Obj158)

Obj156_options = {
  text = "UQUEST",
  x = 160,
  y = 34,
  width = 243,
  height = 70,
  font = "STIXGeneral-Bold",
  fontSize = 48,
  align = "center",
}
Obj156 = display.newEmbossedText( Obj156_options )
Obj156.id = "Obj156"
Obj156:setTextColor(0.0, 0.4, 0.8, 1.0)

-- fn to handle button press on Obj6
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj6
function Obj6OnPressHandler( event )

  -- Obj8: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj6")
  -- image "TEXAS.png"
  Obj177 = display.newImageRect( "TEXAS.png", 115, 77 )
  Obj177.x = 217
  Obj177.y = 433
  Obj177.id = "Obj177"
  Obj177:addEventListener( "tap", Obj177TapHandler )

end



-- fn to handle taps on Obj177
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj177
function Obj177TapHandler( event )

  -- Obj183: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj177 )

end

Obj6 = widget.newButton({
  x = 146,
  y = 319,
  width = 16,
  height = 9,
  id = "Obj6",
  label = "TX",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj6OnPressHandler,
})

-- fn to handle button press on Obj12
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj12
function Obj12OnPressHandler( event )

  -- Obj14: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj12")
  -- image "MISSISSIPPI.png"
  Obj187 = display.newImageRect( "MISSISSIPPI.png", 115, 77 )
  Obj187.x = 215
  Obj187.y = 433
  Obj187.id = "Obj187"
  Obj187:addEventListener( "tap", Obj187TapHandler )

end



-- fn to handle taps on Obj187
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj187
function Obj187TapHandler( event )

  -- Obj189: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj187 )

end

Obj12 = widget.newButton({
  x = 200,
  y = 303,
  width = 19,
  height = 10,
  id = "Obj12",
  label = "MS",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj12OnPressHandler,
})

-- fn to handle button press on Obj15
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj15
function Obj15OnPressHandler( event )

  -- Obj17: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj15")
  -- image "ARKANSAS.png"
  Obj191 = display.newImageRect( "ARKANSAS.png", 115, 77 )
  Obj191.x = 215
  Obj191.y = 431
  Obj191.id = "Obj191"
  Obj191:addEventListener( "tap", Obj191TapHandler )

end



-- fn to handle taps on Obj191
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj191
function Obj191TapHandler( event )

  -- Obj194: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj191 )

end

Obj15 = widget.newButton({
  x = 183,
  y = 281,
  width = 18,
  height = 9,
  id = "Obj15",
  label = "AR",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj15OnPressHandler,
})

-- fn to handle button press on Obj18
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj18
function Obj18OnPressHandler( event )

  -- Obj20: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj18")
  -- image "ALABAMA.png"
  Obj195 = display.newImageRect( "ALABAMA.png", 115, 77 )
  Obj195.x = 215
  Obj195.y = 430
  Obj195.id = "Obj195"
  Obj195:addEventListener( "tap", Obj195TapHandler )

end



-- fn to handle taps on Obj195
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj195
function Obj195TapHandler( event )

  -- Obj198: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj195 )

end

Obj18 = widget.newButton({
  x = 220,
  y = 301,
  width = 16,
  height = 9,
  id = "Obj18",
  label = "AL",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj18OnPressHandler,
})

-- fn to handle button press on Obj21
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj21
function Obj21OnPressHandler( event )

  -- Obj23: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj21")
  -- image "florida.png"
  Obj199 = display.newImageRect( "florida.png", 115, 77 )
  Obj199.x = 214
  Obj199.y = 431
  Obj199.id = "Obj199"
  Obj199:addEventListener( "tap", Obj199TapHandler )

end



-- fn to handle taps on Obj199
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj199
function Obj199TapHandler( event )

  -- Obj202: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj199 )

end

Obj21 = widget.newButton({
  x = 256,
  y = 348,
  width = 14,
  height = 9,
  id = "Obj21",
  label = "FL",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj21OnPressHandler,
})

-- fn to handle button press on Obj24
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj24
function Obj24OnPressHandler( event )

  -- Obj26: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj24")
  -- image "georgia.png"
  Obj203 = display.newImageRect( "georgia.png", 115, 77 )
  Obj203.x = 213
  Obj203.y = 429
  Obj203.id = "Obj203"
  Obj203:addEventListener( "tap", Obj203TapHandler )

end



-- fn to handle taps on Obj203
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj203
function Obj203TapHandler( event )

  -- Obj206: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj203 )

end

Obj24 = widget.newButton({
  x = 239,
  y = 301,
  width = 18,
  height = 10,
  id = "Obj24",
  label = "GA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj24OnPressHandler,
})

-- fn to handle button press on Obj27
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj27
function Obj27OnPressHandler( event )

  -- Obj29: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj27")
  -- image "SOUTH CAROLINA.png"
  Obj207 = display.newImageRect( "SOUTH CAROLINA.png", 102, 77 )
  Obj207.x = 215
  Obj207.y = 429
  Obj207.id = "Obj207"
  Obj207:addEventListener( "tap", Obj207TapHandler )

end



-- fn to handle taps on Obj207
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj207
function Obj207TapHandler( event )

  -- Obj210: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj207 )

end

Obj27 = widget.newButton({
  x = 254,
  y = 281,
  width = 17,
  height = 10,
  id = "Obj27",
  label = "SC",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj27OnPressHandler,
})

-- fn to handle button press on Obj30
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj30
function Obj30OnPressHandler( event )

  -- Obj32: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj30")
  -- image "NORTH CAROLINA.png"
  Obj211 = display.newImageRect( "NORTH CAROLINA.png", 102, 77 )
  Obj211.x = 214
  Obj211.y = 430
  Obj211.id = "Obj211"
  Obj211:addEventListener( "tap", Obj211TapHandler )

end



-- fn to handle taps on Obj211
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj211
function Obj211TapHandler( event )

  -- Obj214: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj211 )

end

Obj30 = widget.newButton({
  x = 262,
  y = 261,
  width = 18,
  height = 10,
  id = "Obj30",
  label = "NC",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj30OnPressHandler,
})

-- fn to handle button press on Obj33
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj33
function Obj33OnPressHandler( event )

  -- Obj35: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj33")
  -- image "VIRGINA.png"
  Obj215 = display.newImageRect( "VIRGINA.png", 102, 77 )
  Obj215.x = 214
  Obj215.y = 431
  Obj215.id = "Obj215"
  Obj215:addEventListener( "tap", Obj215TapHandler )

end



-- fn to handle taps on Obj215
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj215
function Obj215TapHandler( event )

  -- Obj218: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj215 )

end

Obj33 = widget.newButton({
  x = 263,
  y = 237,
  width = 18,
  height = 9,
  id = "Obj33",
  label = "VA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj33OnPressHandler,
})

-- fn to handle button press on Obj36
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj36
function Obj36OnPressHandler( event )

  -- Obj38: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj36")
  -- image "maryland.png"
  Obj220 = display.newImageRect( "maryland.png", 115, 77 )
  Obj220.x = 216
  Obj220.y = 430
  Obj220.id = "Obj220"
  Obj220:addEventListener( "tap", Obj220TapHandler )

end



-- fn to handle taps on Obj220
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj220
function Obj220TapHandler( event )

  -- Obj223: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj220 )

end

Obj36 = widget.newButton({
  x = 280,
  y = 229,
  width = 15,
  height = 7,
  id = "Obj36",
  label = "MD",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj36OnPressHandler,
})

-- fn to handle button press on Obj39
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj39
function Obj39OnPressHandler( event )

  -- Obj41: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj39")
  -- image "delaware.png"
  Obj224 = display.newImageRect( "delaware.png", 115, 77 )
  Obj224.x = 214
  Obj224.y = 430
  Obj224.id = "Obj224"
  Obj224:addEventListener( "tap", Obj224TapHandler )

end



-- fn to handle taps on Obj224
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj224
function Obj224TapHandler( event )

  -- Obj227: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj224 )

end

Obj39 = widget.newButton({
  x = 282,
  y = 217,
  width = 13,
  height = 7,
  id = "Obj39",
  label = "DE",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj39OnPressHandler,
})

-- fn to handle button press on Obj42
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj42
function Obj42OnPressHandler( event )

  -- Obj44: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj42")
  -- image "NEW JERSEY.png"
  Obj228 = display.newImageRect( "NEW JERSEY.png", 115, 77 )
  Obj228.x = 214
  Obj228.y = 429
  Obj228.id = "Obj228"
  Obj228:addEventListener( "tap", Obj228TapHandler )

end



-- fn to handle taps on Obj228
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj228
function Obj228TapHandler( event )

  -- Obj231: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj228 )

end

Obj42 = widget.newButton({
  x = 282,
  y = 202,
  width = 12,
  height = 8,
  id = "Obj42",
  label = "NJ",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj42OnPressHandler,
})

-- fn to handle button press on Obj45
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj45
function Obj45OnPressHandler( event )

  -- Obj47: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj45")
  -- image "conneticut.png"
  Obj232 = display.newImageRect( "conneticut.png", 115, 77 )
  Obj232.x = 212
  Obj232.y = 429
  Obj232.id = "Obj232"
  Obj232:addEventListener( "tap", Obj232TapHandler )

end



-- fn to handle taps on Obj232
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj232
function Obj232TapHandler( event )

  -- Obj235: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj232 )

end

Obj45 = widget.newButton({
  x = 287,
  y = 188,
  width = 13,
  height = 8,
  id = "Obj45",
  label = "CT",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj45OnPressHandler,
})

-- fn to handle button press on Obj48
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj48
function Obj48OnPressHandler( event )

  -- Obj50: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj48")
  -- image "RHODE ISLAND.png"
  Obj236 = display.newImageRect( "RHODE ISLAND.png", 115, 77 )
  Obj236.x = 214
  Obj236.y = 429
  Obj236.id = "Obj236"
  Obj236:addEventListener( "tap", Obj236TapHandler )

end



-- fn to handle taps on Obj236
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj236
function Obj236TapHandler( event )

  -- Obj239: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj236 )

end

Obj48 = widget.newButton({
  x = 298,
  y = 182,
  width = 9,
  height = 7,
  id = "Obj48",
  label = "RI",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj48OnPressHandler,
})

-- fn to handle button press on Obj51
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj51
function Obj51OnPressHandler( event )

  -- Obj53: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj51")
  -- image "MASSACHUSETTS.png"
  Obj240 = display.newImageRect( "MASSACHUSETTS.png", 115, 77 )
  Obj240.x = 213
  Obj240.y = 429
  Obj240.id = "Obj240"
  Obj240:addEventListener( "tap", Obj240TapHandler )

end



-- fn to handle taps on Obj240
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj240
function Obj240TapHandler( event )

  -- Obj243: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj240 )

end

Obj51 = widget.newButton({
  x = 290,
  y = 172,
  width = 15,
  height = 7,
  id = "Obj51",
  label = "MA",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj51OnPressHandler,
})

-- fn to handle button press on Obj54
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj54
function Obj54OnPressHandler( event )

  -- Obj56: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj54")
  -- image "NEBRASKA.png"
  Obj245 = display.newImageRect( "NEBRASKA.png", 128, 77 )
  Obj245.x = 217
  Obj245.y = 430
  Obj245.id = "Obj245"
  Obj245:addEventListener( "tap", Obj245TapHandler )

end



-- fn to handle taps on Obj245
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj245
function Obj245TapHandler( event )

  -- Obj248: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj245 )

end

Obj54 = widget.newButton({
  x = 293,
  y = 159,
  width = 13,
  height = 7,
  id = "Obj54",
  label = "NE",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj54OnPressHandler,
})

-- fn to handle button press on Obj57
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj57
function Obj57OnPressHandler( event )

  -- Obj59: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj57")
  -- image "VERMONT.png"
  Obj249 = display.newImageRect( "VERMONT.png", 115, 77 )
  Obj249.x = 214
  Obj249.y = 429
  Obj249.id = "Obj249"
  Obj249:addEventListener( "tap", Obj249TapHandler )

end



-- fn to handle taps on Obj249
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj249
function Obj249TapHandler( event )

  -- Obj252: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj249 )

end

Obj57 = widget.newButton({
  x = 280,
  y = 156,
  width = 13,
  height = 7,
  id = "Obj57",
  label = "VT",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj57OnPressHandler,
})

-- fn to handle button press on Obj60
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj60
function Obj60OnPressHandler( event )

  -- Obj62: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj60")
  -- image "maine.png"
  Obj253 = display.newImageRect( "maine.png", 115, 77 )
  Obj253.x = 214
  Obj253.y = 431
  Obj253.id = "Obj253"
  Obj253:addEventListener( "tap", Obj253TapHandler )

end



-- fn to handle taps on Obj253
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj253
function Obj253TapHandler( event )

  -- Obj256: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj253 )

end

Obj60 = widget.newButton({
  x = 298,
  y = 134,
  width = 14,
  height = 7,
  id = "Obj60",
  label = "ME",
  font = "HelveticaNeue-Bold",
  fontSize = 9,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj60OnPressHandler,
})

-- fn to handle button press on Obj63
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj63
function Obj63OnPressHandler( event )

  -- Obj65: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj63")
  -- image "NEW YORK.png"
  Obj257 = display.newImageRect( "NEW YORK.png", 128, 77 )
  Obj257.x = 216
  Obj257.y = 429
  Obj257.id = "Obj257"
  Obj257:addEventListener( "tap", Obj257TapHandler )

end



-- fn to handle taps on Obj257
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj257
function Obj257TapHandler( event )

  -- Obj260: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj257 )

end

Obj63 = widget.newButton({
  x = 270,
  y = 173,
  width = 18,
  height = 9,
  id = "Obj63",
  label = "NY",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj63OnPressHandler,
})

-- fn to handle button press on Obj66
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj66
function Obj66OnPressHandler( event )

  -- Obj68: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj66")
  -- image "PENNSYLVANIA.png"
  Obj261 = display.newImageRect( "PENNSYLVANIA.png", 115, 77 )
  Obj261.x = 215
  Obj261.y = 431
  Obj261.id = "Obj261"
  Obj261:addEventListener( "tap", Obj261TapHandler )

end



-- fn to handle taps on Obj261
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj261
function Obj261TapHandler( event )

  -- Obj264: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj261 )

end

Obj66 = widget.newButton({
  x = 261,
  y = 198,
  width = 17,
  height = 9,
  id = "Obj66",
  label = "PA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj66OnPressHandler,
})

-- fn to handle button press on Obj69
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj69
function Obj69OnPressHandler( event )

  -- Obj71: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj69")
  -- image "WEST VIRIGINIA .png"
  Obj265 = display.newImageRect( "WEST VIRIGINIA .png", 115, 77 )
  Obj265.x = 215
  Obj265.y = 429
  Obj265.id = "Obj265"
  Obj265:addEventListener( "tap", Obj265TapHandler )

end



-- fn to handle taps on Obj265
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj265
function Obj265TapHandler( event )

  -- Obj268: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj265 )

end

Obj69 = widget.newButton({
  x = 248,
  y = 230,
  width = 14,
  height = 6,
  id = "Obj69",
  label = "WV",
  font = "HelveticaNeue-Bold",
  fontSize = 8,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj69OnPressHandler,
})

-- fn to handle button press on Obj72
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj72
function Obj72OnPressHandler( event )

  -- Obj74: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj72")
  -- image "indiana.png"
  Obj269 = display.newImageRect( "indiana.png", 115, 77 )
  Obj269.x = 216
  Obj269.y = 429
  Obj269.id = "Obj269"
  Obj269:addEventListener( "tap", Obj269TapHandler )

end



-- fn to handle taps on Obj269
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj269
function Obj269TapHandler( event )

  -- Obj272: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj269 )

end

Obj72 = widget.newButton({
  x = 217,
  y = 217,
  width = 13,
  height = 9,
  id = "Obj72",
  label = "IN",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj72OnPressHandler,
})

-- fn to handle button press on Obj75
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj75
function Obj75OnPressHandler( event )

  -- Obj77: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj75")
  -- image "OHIO.png"
  Obj273 = display.newImageRect( "OHIO.png", 115, 77 )
  Obj273.x = 216
  Obj273.y = 431
  Obj273.id = "Obj273"
  Obj273:addEventListener( "tap", Obj273TapHandler )

end



-- fn to handle taps on Obj273
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj273
function Obj273TapHandler( event )

  -- Obj276: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj273 )

end

Obj75 = widget.newButton({
  x = 236,
  y = 214,
  width = 18,
  height = 10,
  id = "Obj75",
  label = "OH",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj75OnPressHandler,
})

-- fn to handle button press on Obj78
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj78
function Obj78OnPressHandler( event )

  -- Obj80: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj78")
  -- image "kentucky.png"
  Obj277 = display.newImageRect( "kentucky.png", 115, 77 )
  Obj277.x = 216
  Obj277.y = 432
  Obj277.id = "Obj277"
  Obj277:addEventListener( "tap", Obj277TapHandler )

end



-- fn to handle taps on Obj277
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj277
function Obj277TapHandler( event )

  -- Obj280: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj277 )

end

Obj78 = widget.newButton({
  x = 224,
  y = 248,
  width = 18,
  height = 9,
  id = "Obj78",
  label = "KY",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj78OnPressHandler,
})

-- fn to handle button press on Obj81
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj81
function Obj81OnPressHandler( event )

  -- Obj83: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj81")
  -- image "TENNESSEE.png"
  Obj281 = display.newImageRect( "TENNESSEE.png", 115, 77 )
  Obj281.x = 213
  Obj281.y = 431
  Obj281.id = "Obj281"
  Obj281:addEventListener( "tap", Obj281TapHandler )

end



-- fn to handle taps on Obj281
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj281
function Obj281TapHandler( event )

  -- Obj284: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj281 )

end

Obj81 = widget.newButton({
  x = 219,
  y = 268,
  width = 16,
  height = 9,
  id = "Obj81",
  label = "TN",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj81OnPressHandler,
})

-- fn to handle button press on Obj84
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj84
function Obj84OnPressHandler( event )

  -- Obj86: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj84")
  -- image "illinois.png"
  Obj285 = display.newImageRect( "illinois.png", 115, 77 )
  Obj285.x = 215
  Obj285.y = 432
  Obj285.id = "Obj285"
  Obj285:addEventListener( "tap", Obj285TapHandler )

end



-- fn to handle taps on Obj285
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj285
function Obj285TapHandler( event )

  -- Obj288: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj285 )

end

Obj84 = widget.newButton({
  x = 200,
  y = 220,
  width = 11,
  height = 9,
  id = "Obj84",
  label = "IL",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj84OnPressHandler,
})

-- fn to handle button press on Obj87
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj87
function Obj87OnPressHandler( event )

  -- Obj89: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj87")
  -- image "MISSOURI.png"
  Obj289 = display.newImageRect( "MISSOURI.png", 115, 77 )
  Obj289.x = 212
  Obj289.y = 429
  Obj289.id = "Obj289"
  Obj289:addEventListener( "tap", Obj289TapHandler )

end



-- fn to handle taps on Obj289
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj289
function Obj289TapHandler( event )

  -- Obj292: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj289 )

end

Obj87 = widget.newButton({
  x = 183,
  y = 242,
  width = 20,
  height = 10,
  id = "Obj87",
  label = "MO",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj87OnPressHandler,
})

-- fn to handle button press on Obj90
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj90
function Obj90OnPressHandler( event )

  -- Obj92: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj90")
  -- image "iowa.png"
  Obj293 = display.newImageRect( "iowa.png", 115, 77 )
  Obj293.x = 213
  Obj293.y = 433
  Obj293.id = "Obj293"
  Obj293:addEventListener( "tap", Obj293TapHandler )

end



-- fn to handle taps on Obj293
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj293
function Obj293TapHandler( event )

  -- Obj296: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj293 )

end

Obj90 = widget.newButton({
  x = 176,
  y = 201,
  width = 13,
  height = 9,
  id = "Obj90",
  label = "IA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj90OnPressHandler,
})

-- fn to handle button press on Obj93
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj93
function Obj93OnPressHandler( event )

  -- Obj95: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj93")
  -- image "WINSCONSIN.png"
  Obj297 = display.newImageRect( "WINSCONSIN.png", 115, 77 )
  Obj297.x = 215
  Obj297.y = 431
  Obj297.id = "Obj297"
  Obj297:addEventListener( "tap", Obj297TapHandler )

end



-- fn to handle taps on Obj297
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj297
function Obj297TapHandler( event )

  -- Obj300: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj297 )

end

Obj93 = widget.newButton({
  x = 194,
  y = 173,
  width = 14,
  height = 9,
  id = "Obj93",
  label = "WI",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj93OnPressHandler,
})

-- fn to handle button press on Obj96
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj96
function Obj96OnPressHandler( event )

  -- Obj98: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj96")
  -- image "MICHIGAN.png"
  Obj301 = display.newImageRect( "MICHIGAN.png", 128, 77 )
  Obj301.x = 214
  Obj301.y = 431
  Obj301.id = "Obj301"
  Obj301:addEventListener( "tap", Obj301TapHandler )

end



-- fn to handle taps on Obj301
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj301
function Obj301TapHandler( event )

  -- Obj304: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj301 )

end

Obj96 = widget.newButton({
  x = 223,
  y = 185,
  width = 14,
  height = 9,
  id = "Obj96",
  label = "MI",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj96OnPressHandler,
})

-- fn to handle button press on Obj99
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj99
function Obj99OnPressHandler( event )

  -- Obj101: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj99")
  -- image "MINNESOTA.png"
  Obj305 = display.newImageRect( "MINNESOTA.png", 115, 77 )
  Obj305.x = 215
  Obj305.y = 431
  Obj305.id = "Obj305"
  Obj305:addEventListener( "tap", Obj305TapHandler )

end



-- fn to handle taps on Obj305
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj305
function Obj305TapHandler( event )

  -- Obj308: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj305 )

end

Obj99 = widget.newButton({
  x = 172,
  y = 160,
  width = 20,
  height = 9,
  id = "Obj99",
  label = "MN",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj99OnPressHandler,
})

-- fn to handle button press on Obj102
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj102
function Obj102OnPressHandler( event )

  -- Obj104: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj102")
  -- image "NORTH DAKOTA.png"
  Obj309 = display.newImageRect( "NORTH DAKOTA.png", 128, 77 )
  Obj309.x = 217
  Obj309.y = 431
  Obj309.id = "Obj309"
  Obj309:addEventListener( "tap", Obj309TapHandler )

end



-- fn to handle taps on Obj309
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj309
function Obj309TapHandler( event )

  -- Obj312: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj309 )

end

Obj102 = widget.newButton({
  x = 141,
  y = 141,
  width = 18,
  height = 9,
  id = "Obj102",
  label = "ND",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj102OnPressHandler,
})

-- fn to handle button press on Obj105
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj105
function Obj105OnPressHandler( event )

  -- Obj107: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj105")
  -- image "SOUTH DAKOTA.png"
  Obj313 = display.newImageRect( "SOUTH DAKOTA.png", 115, 77 )
  Obj313.x = 217
  Obj313.y = 431
  Obj313.id = "Obj313"
  Obj313:addEventListener( "tap", Obj313TapHandler )

end



-- fn to handle taps on Obj313
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj313
function Obj313TapHandler( event )

  -- Obj316: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj313 )

end

Obj105 = widget.newButton({
  x = 141,
  y = 172,
  width = 17,
  height = 10,
  id = "Obj105",
  label = "SD",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj105OnPressHandler,
})

-- fn to handle button press on Obj108
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj108
function Obj108OnPressHandler( event )

  -- Obj110: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj108")
  -- image "NEBRASKA.png"
  Obj317 = display.newImageRect( "NEBRASKA.png", 115, 77 )
  Obj317.x = 213
  Obj317.y = 430
  Obj317.id = "Obj317"
  Obj317:addEventListener( "tap", Obj317TapHandler )

end



-- fn to handle taps on Obj317
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj317
function Obj317TapHandler( event )

  -- Obj320: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj317 )

end

Obj108 = widget.newButton({
  x = 143,
  y = 209,
  width = 17,
  height = 9,
  id = "Obj108",
  label = "NE",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj108OnPressHandler,
})

-- fn to handle button press on Obj111
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj111
function Obj111OnPressHandler( event )

  -- Obj113: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj111")
  -- image "kansas.png"
  Obj321 = display.newImageRect( "kansas.png", 115, 77 )
  Obj321.x = 215
  Obj321.y = 429
  Obj321.id = "Obj321"
  Obj321:addEventListener( "tap", Obj321TapHandler )

end



-- fn to handle taps on Obj321
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj321
function Obj321TapHandler( event )

  -- Obj324: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj321 )

end

Obj111 = widget.newButton({
  x = 151,
  y = 240,
  width = 17,
  height = 10,
  id = "Obj111",
  label = "KS",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj111OnPressHandler,
})

-- fn to handle button press on Obj114
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj114
function Obj114OnPressHandler( event )

  -- Obj116: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj114")
  -- image "OKLAHOMA.png"
  Obj325 = display.newImageRect( "OKLAHOMA.png", 115, 77 )
  Obj325.x = 216
  Obj325.y = 430
  Obj325.id = "Obj325"
  Obj325:addEventListener( "tap", Obj325TapHandler )

end



-- fn to handle taps on Obj325
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj325
function Obj325TapHandler( event )

  -- Obj328: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj325 )

end

Obj114 = widget.newButton({
  x = 155,
  y = 274,
  width = 18,
  height = 10,
  id = "Obj114",
  label = "OK",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj114OnPressHandler,
})

-- fn to handle button press on Obj117
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj117
function Obj117OnPressHandler( event )

  -- Obj119: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj117")
  -- image "NEW MEXICO.png"
  Obj329 = display.newImageRect( "NEW MEXICO.png", 115, 77 )
  Obj329.x = 216
  Obj329.y = 432
  Obj329.id = "Obj329"
  Obj329:addEventListener( "tap", Obj329TapHandler )

end



-- fn to handle taps on Obj329
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj329
function Obj329TapHandler( event )

  -- Obj332: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj329 )

end

Obj117 = widget.newButton({
  x = 104,
  y = 281,
  width = 20,
  height = 9,
  id = "Obj117",
  label = "NM",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj117OnPressHandler,
})

-- fn to handle button press on Obj120
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj120
function Obj120OnPressHandler( event )

  -- Obj122: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj120")
  -- image "colorado.png"
  Obj333 = display.newImageRect( "colorado.png", 115, 77 )
  Obj333.x = 212
  Obj333.y = 432
  Obj333.id = "Obj333"
  Obj333:addEventListener( "tap", Obj333TapHandler )

end



-- fn to handle taps on Obj333
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj333
function Obj333TapHandler( event )

  -- Obj336: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj333 )

end

Obj120 = widget.newButton({
  x = 110,
  y = 231,
  width = 18,
  height = 10,
  id = "Obj120",
  label = "CO",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj120OnPressHandler,
})

-- fn to handle button press on Obj123
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj123
function Obj123OnPressHandler( event )

  -- Obj125: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj123")
  -- image "ARIZONA.png"
  Obj337 = display.newImageRect( "ARIZONA.png", 115, 77 )
  Obj337.x = 215
  Obj337.y = 430
  Obj337.id = "Obj337"
  Obj337:addEventListener( "tap", Obj337TapHandler )

end



-- fn to handle taps on Obj337
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj337
function Obj337TapHandler( event )

  -- Obj340: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj337 )

end

Obj123 = widget.newButton({
  x = 71,
  y = 274,
  width = 17,
  height = 9,
  id = "Obj123",
  label = "AZ",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj123OnPressHandler,
})

-- fn to handle button press on Obj126
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj126
function Obj126OnPressHandler( event )

  -- Obj128: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj126")
  -- image "UTAH.png"
  Obj341 = display.newImageRect( "UTAH.png", 115, 77 )
  Obj341.x = 215
  Obj341.y = 430
  Obj341.id = "Obj341"
  Obj341:addEventListener( "tap", Obj341TapHandler )

end



-- fn to handle taps on Obj341
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj341
function Obj341TapHandler( event )

  -- Obj344: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj341 )

end

Obj126 = widget.newButton({
  x = 78,
  y = 223,
  width = 17,
  height = 10,
  id = "Obj126",
  label = "UT",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj126OnPressHandler,
})

-- fn to handle button press on Obj129
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj129
function Obj129OnPressHandler( event )

  -- Obj131: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj129")
  -- image "WYOMING.png"
  Obj345 = display.newImageRect( "WYOMING.png", 115, 77 )
  Obj345.x = 216
  Obj345.y = 430
  Obj345.id = "Obj345"
  Obj345:addEventListener( "tap", Obj345TapHandler )

end



-- fn to handle taps on Obj345
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj345
function Obj345TapHandler( event )

  -- Obj348: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj345 )

end

Obj129 = widget.newButton({
  x = 103,
  y = 184,
  width = 20,
  height = 9,
  id = "Obj129",
  label = "WY",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj129OnPressHandler,
})

-- fn to handle button press on Obj132
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj132
function Obj132OnPressHandler( event )

  -- Obj134: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj132")
  -- image "MONTANA.png"
  Obj349 = display.newImageRect( "MONTANA.png", 115, 77 )
  Obj349.x = 216
  Obj349.y = 429
  Obj349.id = "Obj349"
  Obj349:addEventListener( "tap", Obj349TapHandler )

end



-- fn to handle taps on Obj349
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj349
function Obj349TapHandler( event )

  -- Obj352: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj349 )

end

Obj132 = widget.newButton({
  x = 98,
  y = 136,
  width = 19,
  height = 9,
  id = "Obj132",
  label = "MT",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj132OnPressHandler,
})

-- fn to handle button press on Obj135
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj135
function Obj135OnPressHandler( event )

  -- Obj137: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj135")
  -- image "idaho.png"
  Obj353 = display.newImageRect( "idaho.png", 115, 77 )
  Obj353.x = 214
  Obj353.y = 430
  Obj353.id = "Obj353"
  Obj353:addEventListener( "tap", Obj353TapHandler )

end



-- fn to handle taps on Obj353
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj353
function Obj353TapHandler( event )

  -- Obj356: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj353 )

end

Obj135 = widget.newButton({
  x = 67,
  y = 165,
  width = 13,
  height = 9,
  id = "Obj135",
  label = "ID",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj135OnPressHandler,
})

-- fn to handle button press on Obj138
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj138
function Obj138OnPressHandler( event )

  -- Obj140: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj138")
  -- image "WASHINGTON.png"
  Obj357 = display.newImageRect( "WASHINGTON.png", 115, 77 )
  Obj357.x = 214
  Obj357.y = 430
  Obj357.id = "Obj357"
  Obj357:addEventListener( "tap", Obj357TapHandler )

end



-- fn to handle taps on Obj357
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj357
function Obj357TapHandler( event )

  -- Obj360: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj357 )

end

Obj138 = widget.newButton({
  x = 42,
  y = 121,
  width = 20,
  height = 9,
  id = "Obj138",
  label = "WA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj138OnPressHandler,
})

-- fn to handle button press on Obj141
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj141
function Obj141OnPressHandler( event )

  -- Obj143: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj141")
  -- image "OREGON.png"
  Obj361 = display.newImageRect( "OREGON.png", 115, 77 )
  Obj361.x = 217
  Obj361.y = 428
  Obj361.id = "Obj361"
  Obj361:addEventListener( "tap", Obj361TapHandler )

end



-- fn to handle taps on Obj361
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj361
function Obj361TapHandler( event )

  -- Obj364: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj361 )

end

Obj141 = widget.newButton({
  x = 37,
  y = 158,
  width = 18,
  height = 10,
  id = "Obj141",
  label = "OR",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj141OnPressHandler,
})

-- fn to handle button press on Obj144
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj144
function Obj144OnPressHandler( event )

  -- Obj146: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj144")
  -- image "NEVADA.png"
  Obj365 = display.newImageRect( "NEVADA.png", 115, 77 )
  Obj365.x = 216
  Obj365.y = 430
  Obj365.id = "Obj365"
  Obj365:addEventListener( "tap", Obj365TapHandler )

end



-- fn to handle taps on Obj365
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj365
function Obj365TapHandler( event )

  -- Obj368: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj365 )

end

Obj144 = widget.newButton({
  x = 49,
  y = 209,
  width = 17,
  height = 9,
  id = "Obj144",
  label = "NV",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj144OnPressHandler,
})

-- fn to handle button press on Obj147
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj147
function Obj147OnPressHandler( event )

  -- Obj149: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj147")
  -- image "california.png"
  Obj369 = display.newImageRect( "california.png", 115, 77 )
  Obj369.x = 215
  Obj369.y = 430
  Obj369.id = "Obj369"
  Obj369:addEventListener( "tap", Obj369TapHandler )

end



-- fn to handle taps on Obj369
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj369
function Obj369TapHandler( event )

  -- Obj372: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj369 )

end

Obj147 = widget.newButton({
  x = 26,
  y = 224,
  width = 18,
  height = 10,
  id = "Obj147",
  label = "CA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj147OnPressHandler,
})

-- fn to handle button press on Obj150
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj150
function Obj150OnPressHandler( event )

  -- Obj152: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj150")
  -- image "ALASKA.png"
  Obj373 = display.newImageRect( "ALASKA.png", 115, 77 )
  Obj373.x = 216
  Obj373.y = 431
  Obj373.id = "Obj373"
  Obj373:addEventListener( "tap", Obj373TapHandler )

end



-- fn to handle taps on Obj373
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj373
function Obj373TapHandler( event )

  -- Obj376: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj373 )

end

Obj150 = widget.newButton({
  x = 47,
  y = 363,
  width = 18,
  height = 9,
  id = "Obj150",
  label = "AK",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj150OnPressHandler,
})

-- fn to handle button press on Obj153
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj153
function Obj153OnPressHandler( event )

  -- Obj155: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj153")
  -- image "hawaii.png"
  Obj377 = display.newImageRect( "hawaii.png", 115, 77 )
  Obj377.x = 215
  Obj377.y = 430
  Obj377.id = "Obj377"
  Obj377:addEventListener( "tap", Obj377TapHandler )

end



-- fn to handle taps on Obj377
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj377
function Obj377TapHandler( event )

  -- Obj380: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj377 )

end

Obj153 = widget.newButton({
  x = 112,
  y = 395,
  width = 12,
  height = 9,
  id = "Obj153",
  label = "HI",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj153OnPressHandler,
})

-- fn to handle button press on Obj184
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj184
function Obj184OnPressHandler( event )

  -- Obj186: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj184")
  -- image "louisiana.png"
  Obj381 = display.newImageRect( "louisiana.png", 115, 77 )
  Obj381.x = 217
  Obj381.y = 431
  Obj381.id = "Obj381"
  Obj381:addEventListener( "tap", Obj381TapHandler )

end



-- fn to handle taps on Obj381
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj381
function Obj381TapHandler( event )

  -- Obj384: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj381 )

end

Obj184 = widget.newButton({
  x = 184,
  y = 321,
  width = 16,
  height = 9,
  id = "Obj184",
  label = "LA",
  font = "HelveticaNeue-Bold",
  fontSize = 12,
  strokeColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  onPress = Obj184OnPressHandler,
})

-- fn to handle button press on Obj169
-- https://docs.coronalabs.com/api/library/widget/newButton.html
-- note: this fn must be positioned in the stack above Obj169
function Obj169OnPressHandler( event )

  -- Obj171: default button event support
  -- put code here to respond to presses on this button
  print("You pressed the button Obj169")
  -- image "solution.png"
  Obj385 = display.newImageRect( "solution.png", 141, 90 )
  Obj385.x = 215
  Obj385.y = 433
  Obj385.id = "Obj385"
  Obj385:addEventListener( "tap", Obj385TapHandler )

end



Obj175 = display.newRect(50, 437, 83, 38)
Obj175:setFillColor(Obj158)

-- image button Obj169
-- https://docs.coronalabs.com/api/library/widget/newButton.html
Obj169 = widget.newButton({
  x = 50,
  y = 438,
  width = 77,
  height = 40,
  id = "Obj169",
  label = "SOLUTION",
  labelAlign = "center",
  font = "STIXGeneral-Bold",
  fontSize = 15,
  labelColor = { default = {0.25, 0.54, 0.87, 1.0}, over = {0.17, 0.37, 0.61, 1.0} },
  --defaultFile = "file resource not specified (null)", --<< remember to move this into the project folder!
  --overFile = "file resource not found ( null )", --<< remember to move this into the project folder!
  onPress = Obj169OnPressHandler,
})

-- fn to handle taps on Obj385
-- https://docs.coronalabs.com/api/event/tap/index.html
--(see pages 85-87 of CPMAD textbook for usage)
-- note: this fn must be positioned in the stack above Obj385
function Obj385TapHandler( event )

  -- Obj388: default tap support
  -- information about the tap:
  if event.target.id ~= nil then print("Tap on id "..event.target.id ); end
  if event.target.name ~= nil then print("Tap on name "..event.target.name ); end
  print("Tap at x, y = "..event.target.x..", "..event.target.y )
  print("numTaps = "..event.numTaps )
  
  -- tap has been handled (optional final statement):
  -- return true
  
  display.remove( Obj385 )

end